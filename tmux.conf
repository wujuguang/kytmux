# 更改前缀键，使其于screen相同
unbind C-b
set -g prefix C-a

# 缩短输入延迟，在输入通常添加个短暂停留
set -sg escape-time 0

# 内嵌会话发送命令的前缀键
bind-key a send-prefix

# 重载这个文件的键
bind r source-file ~/.tmux.conf

# 终端设置
set -g default-terminal screen-256color
set -g history-limit 50000

# 响铃和监控
set -g visual-silence on
set -g visual-bell on
set -g bell-action any

# 窗体和面板索引从1开始，而不是0
set -g base-index 1
set -g pane-base-index 1

# 启用鼠标(on/off)，建议不要开启鼠标，键盘用熟比鼠标更快，初学开启
set -g mode-mouse off
set -g mouse-select-pane off
set -g mouse-resize-pane off
set -g mouse-select-window off

# 焦点事件
set -g focus-events on

# 载入自定主题
source-file ~/.tmux/../mine.conf

# 试图设置wm和xterm窗口标题
set -g set-titles on

# 状态栏改变间隔
set -g status-interval 5

# but don't change tmux's own window titles
set -w -g automatic-rename on

# fix resizing
setw -g aggressive-resize on

# vim resizes
bind - resize-pane -D 1
bind + resize-pane -U 1
bind < resize-pane -L 1
bind > resize-pane -R 1

# vim style split + perserve pwd
bind-key s split-window -c '#{pane_current_path}'
bind-key v split-window -h -c '#{pane_current_path}'

# split or new window path perserve
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# and faster resizes
bind J resize-pane -D 5
bind K resize-pane -U 5
bind H resize-pane -L 5
bind L resize-pane -R 5

# vim copying
setw -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# Similar to 'C-w j' to navigate windows in Vim
unbind-key j
bind-key j select-pane -D
unbind-key k
bind-key k select-pane -U
unbind-key h
bind-key h select-pane -L
unbind-key l
bind-key l select-pane -R

# fix pbcopy/pbpaste
if 'command -v reattach-to-user-namespace >/dev/null' \
    'set -gq @osx-pasteboard true'

if 'tmux show -gv @osx-clipboard' \
    'set -g default-command "reattach-to-user-namespace -l $SHELL"'

# Copy top of tmux paste buffer stack to OS clipboard.
# Alternatively, this will always immediately copy to system pasteboard:
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
if 'tmux show -gv @osx-clipboard' \
    'bind y run "tmux save-buffer - | reattach-to-user-namespace pbcopy"'

# smart pane switching with awareness of vim splits
# see https://github.com/christoomey/vim-tmux-navigator
bind -n C-h if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-h" "select-pane -L"
bind -n C-j if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-j" "select-pane -D"
bind -n C-k if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-k" "select-pane -U"
bind -n C-l if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-l" "select-pane -R"
bind -n "C-\\" if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-\\" "select-pane -l"

# tmux前缀清除屏幕
bind C-l send-keys 'C-l'

# 插件列表
# 支持 `github_username/repo` 或者完整的git库地址
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-cpu            \
  tmux-plugins/tmux-sensible       \
  tmux-plugins/tmux-copycat        \
  tmux-plugins/tmux-yank           \
  tmux-plugins/tmux-open           \
  tmux-plugins/tmux-logging        \
  tmux-plugins/tmux-resurrect      \
  tmux-plugins/tmux-continuum      \
  tmux-plugins/tmux-sidebar        \
  tmux-plugins/tmux-urlview        \
  tmux-plugins/tmux-fpp            \
  tmux-plugins/tmux-online-status  \
'
# 其它例子:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# resurrect
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'

# continuum
set -g @continuum-restore 'on'
set -g @continuum-boot 'on'
set -g @continuum-boot-options 'iterm,fullscreen'
set -g @continuum-save-interval '5' # 设0停止自动保存，默认15分钟自动保存

# online-status
# set -g @online_icon "ok"
# set -g @offline_icon "offline"

# 初始化TMUX插件管理器
# 保障这行在每个tmux.conf的行尾
run-shell '~/.tmux/plugins/tpm/tpm'
